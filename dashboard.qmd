---
title: "Dashboard - Accidents de la Route"
format: dashboard
server: shiny
---

```{r setup, include=FALSE}
# Charger les bibliothèques nécessaires
library(shiny)
library(ggplot2)
library(dplyr)
library(tidyr)
library(plotly)
library(readr)
```

Importer et préparer les données
```{r}
caracteristiques_2022 <- read_delim("data/carcteristiques-2022.csv", delim = ";", escape_double = FALSE, na = "NA", trim_ws = TRUE)

usagers_2022 <- read_delim("data/usagers-2022.csv", delim = ";", escape_double = FALSE, na = "NA", trim_ws = TRUE)

caracteristiques_2022
usagers_2022

```

Préparer les données
```{r}
accidents_data <- caracteristiques_2022 |>
  left_join(usagers_2022, by=c("Accident_Id"="Num_Acc")) |>
  group_by(an, mois, jour) |>
  summarize(
    nombre_accidents = n(),
    grav = grav,
    .groups = "drop"
  ) |>
  unite("date", an, mois, jour, sep = "-") |>
  mutate(date = as.Date(date))

accidents_data
```
# {.sidebar}
```{r}
      checkboxGroupInput("gravite", "Gravité des accidents", 
                         choices = c("Décès" = "mort", 
                                     "Blessé grave" = "blessé_grave", 
                                     "Blessé léger" = "blessé_léger"), 
                         selected = c("mort", "blessé_grave"))
```

# Plot
```{r}
plotOutput('plot')
```


```{r}
#| context: server
  
  filtered_data <- reactive({
    # Filtrer les données en fonction des types d'accidents sélectionnés
    gravite_selected <- input$gravite
    
    # Exemple pour filtrer les données sur la gravité des accidents (modifie selon ta colonne)
    data_filtered <- caracteristiques_2022 |>
      left_join(usagers_2022, by=c("Accident_Id"="Num_Acc")) |>
      filter(grav %in% gravite_selected) |>
      group_by(an, mois, jour) |>
      summarize(
        nombre_accidents = n(),
        .groups = "drop"
      ) |>
      unite("date", an, mois, jour, sep = "-") |>
      mutate(date = as.Date(date))
    
    return(data_filtered)
  })
  
  output$plot <- renderPlotly({
    # Générer le graphique
    ggplot(data = filtered_data()) +
      geom_line(mapping = aes(x = date, y = nombre_accidents)) +
      geom_smooth(aes(x = date, y = nombre_accidents)) +
      ggtitle("Nombre d'Accidents en 2022") +
      theme_minimal() |>
      ggplotly()
  })


```
